{"ast":null,"code":"var _jsxFileName = \"D:\\\\installsoft\\\\Microsoft VS Code\\\\workspace\\\\reactstudy\\\\my-app\\\\src\\\\UI\\\\6-Conditional Rendering\\\\3-logincalAndoperator\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//你会遇到的另一个常见的快捷表达式是 [JavaScript 与（`&&`）运算符](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Logical_AND#:~:text=The logical AND ( %26%26 ) operator,it returns a Boolean value.)。在 React 组件里，通常用在当条件成立时，你想渲染一些 JSX，**或者不做任何渲染**。使用 `&&`，你也可以实现仅当 `isPacked` 为 `true` 时，渲染勾选符号。\nfunction Item(_ref) {\n  let {\n    name,\n    isPacked\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"item\",\n    children: [name, \" \", isPacked && '✔']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 7\n  }, this);\n}\n_c = Item;\nexport default function PackingList() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sally Ride \\u7684\\u884C\\u674E\\u6E05\\u5355\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        isPacked: true,\n        name: \"\\u5B87\\u822A\\u670D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        isPacked: true,\n        name: \"\\u5E26\\u91D1\\u7B94\\u7684\\u5934\\u76D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        isPacked: false,\n        name: \"Tam \\u7684\\u7167\\u7247\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n_c2 = PackingList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"PackingList\");","map":{"version":3,"names":["Item","_ref","name","isPacked","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","PackingList","_c2","$RefreshReg$"],"sources":["D:/installsoft/Microsoft VS Code/workspace/reactstudy/my-app/src/UI/6-Conditional Rendering/3-logincalAndoperator/App.js"],"sourcesContent":["//你会遇到的另一个常见的快捷表达式是 [JavaScript 与（`&&`）运算符](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Logical_AND#:~:text=The logical AND ( %26%26 ) operator,it returns a Boolean value.)。在 React 组件里，通常用在当条件成立时，你想渲染一些 JSX，**或者不做任何渲染**。使用 `&&`，你也可以实现仅当 `isPacked` 为 `true` 时，渲染勾选符号。\r\nfunction Item({ name, isPacked }) {\r\n    return (\r\n      <li className=\"item\">\r\n        {name} {isPacked && '✔'}\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  export default function PackingList() {\r\n    return (\r\n      <section>\r\n        <h1>Sally Ride 的行李清单</h1>\r\n        <ul>\r\n          <Item \r\n            isPacked={true} \r\n            name=\"宇航服\" \r\n          />\r\n          <Item \r\n            isPacked={true} \r\n            name=\"带金箔的头盔\" \r\n          />\r\n          <Item \r\n            isPacked={false} \r\n            name=\"Tam 的照片\" \r\n          />\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n  "],"mappings":";;AAAA;AACA,SAASA,IAAIA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC5B,oBACEG,OAAA;IAAIC,SAAS,EAAC,MAAM;IAAAC,QAAA,GACjBJ,IAAI,EAAC,GAAC,EAACC,QAAQ,IAAI,GAAG;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpB;AAET;AAACC,EAAA,GANMX,IAAI;AAQX,eAAe,SAASY,WAAWA,CAAA,EAAG;EACpC,oBACER,OAAA;IAAAE,QAAA,gBACEF,OAAA;MAAAE,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzBN,OAAA;MAAAE,QAAA,gBACEF,OAAA,CAACJ,IAAI;QACHG,QAAQ,EAAE,IAAK;QACfD,IAAI,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACV,eACFN,OAAA,CAACJ,IAAI;QACHG,QAAQ,EAAE,IAAK;QACfD,IAAI,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACb,eACFN,OAAA,CAACJ,IAAI;QACHG,QAAQ,EAAE,KAAM;QAChBD,IAAI,EAAC;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEd;AAACG,GAAA,GApBuBD,WAAW;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}